namespace MTTRunner
{
    using System;

    using MTTFC;

    public static class Program
    {
        public static void Main(string[] args)
        {
            Program.StartService(args);
        }

        public static void StartService(string[] args)
        {
            var convertService = new ConvertService((logString, logArgs) => Console.WriteLine(logString, logArgs),
                new ConvertServiceParameters()
                {
                    WorkingDirectory = args[0],
                    ConvertDirectory = args[1],
                    ConvertToType = args.Length >=3 ? ConvertToEnum<ConvertToType>(args[2]) : ConvertToType.Interface,
                    EnumValues = args.Length >= 4 ? ConvertToEnum<EnumValues>(args[3]) : EnumValues.Default,
                    PathStyle = args.Length >= 5 ? ConvertToEnum<PathStyle>(args[4]) : PathStyle.Default,
                    IsAutoGeneratedTag = args.Length >= 6 && bool.Parse(args[5]),
                    IsModelInTSFileName = args.Length >= 7 && bool.Parse(args[6])
                });

            convertService.Execute();
        }

        public static T ConvertToEnum<T>(string value)
        {
            return (T)Enum.Parse(typeof(T), value);
        }
    }
}
